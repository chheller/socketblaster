extends layout

block pageTitle
block pageContent
	br
	script(src='/socket.io/socket.io.js')
	script(src='http://code.jquery.com/jquery-1.11.1.js')
	
	#sidebar-wrapper
		ul.sidebar-nav
			li.sidebar-brand
				label Contacts:
				#convos
				br
				label Past Messages: 
				#test Test this.
		
	#page-content-wrapper
		.container
			div.row
				div.col-md-4
					br
					div.panel.panel-default.pull-right
						div.panel-body
							label(for='users') Users Online:
							ul(id="users")
				
				div.col-md-4		
					ul(id="notLoggedIn")
				
					ul(id="messages-area")
					
					div.form-group
						form(action='' class="chat-form")
							label(for='recipientName') Send To User: 
							input(type='text', id='recipient' class="form-control")
							br
							label(for='message') Message: 
							textarea(id='message' class="form-control" style="resize: vertical")
							br
							<input type="submit" value="Send" class="pull-right btn btn-default"/>
							br
							br
							br

					
			div.row
				div.col-md-4
				div.col-md-4
					br
					div.panel.panel-default
						div.panel-body
							label(for='messages') Messages:
							ul(id="messages")

						
	script.
		
		function populateContacts(selectedName) {
			var userEmail = sessionStorage.getItem('user', userEmail);
			
			var convoContent = "";
			var convoNames = [];
			var messageContent = "";
			var messages = [];
		
			
			// Use AJAX to get the conversations from the database
			$.getJSON( '/conversations/findmsgs/' + userEmail, function( data ) {
				$.each(data, function(){
					if(this.sender == userEmail) {
						var doesit = convoNames.indexOf(this.username);
						if(doesit == -1) {
							convoNames.push(this.username);
						}
					}
					else {
						if(convoNames.indexOf(this.sender) == -1) {
							convoNames.push(this.sender);
						}
					}
				});
				
				convoNames.forEach(function(currentValue,index,arr){
					convoContent += '<a class="msguser" rel="try@test" onclick="populateContacts(\'' + currentValue + '\')">' + currentValue + '</a></br>';
				})

				$.each(data, function(){
					if((this.sender == selectedName) || (this.username == selectedName)){
						messageContent += '<p>' + this.sender + ": "+ this.msg; + '</p>';
					}
				});

				document.getElementById("convos").innerHTML = convoContent;
				document.getElementById("test").innerHTML = messageContent;
				
			});
		};
		
		var userEmail = sessionStorage.getItem('user', userEmail);
		
		if(userEmail != null && userEmail != "")
		{
			populateContacts("");
		
			var socket = io.connect('socketblaster.com');
			socket.on("connect", function() {
				
				socket.emit("add-user", {"username": userEmail});
				
				var chat_form = $(".chat-form");
				chat_form.show();
				chat_form.on("submit", function(){
					// Send the message to the server
					socket.emit("private-message", {
						"username": $(this).find("input:first").val(),
						"sender": userEmail,
						"msg": $(this).find("textarea").val(),
						"content": "Received from " + userEmail + ": " + $(this).find("textarea").val()
					});
					
					//$('#messages').append($('<li>').text("Sent to " + $("#recipient").val() + ": " + $('#message').val()));
					
					var d = new Date();
					var n = d.getTime();
					
					// Send the message to the DB
					// compile all message data into JSON
					var newMessage = {
						"username": $(this).find("input:first").val(),
						"sender": userEmail,
						"msg": $('#message').val(),
						"ts": n
					};
					
					
					// Use AJAX to post the object to our conversations collection in the database
					$.ajax({
							type: 'POST',
							data: newMessage,
							url: '/conversations/new',
							dataType: 'JSON'
					}).done(function( response ) {});
					
					populateContacts($(this).find("input:first").val());

					// Empty the form
					$(this).find("textarea").val('');

					return false;
				});
				
				// Whenever we receieve a message, append it to the <ul>
				socket.on("add-message", function(data){
					if(data == "user does not exist")
					{
						$("#messages").append($("<li>", {
							"text": data
						}));
					}
					else
					{
						$("#messages").append($("<li>", {
							"text": data.content
						}));
					}
				});
				
				socket.on("send-confirmation", function(data){
				
					$('#messages').append($('<li>').text(data));
						
				});
				
				socket.on("user-connected", function(data){
					
					$("#users").append($("<li>", {
						"text": data.username
					}));
		
				});
				
				socket.on("currentUser-list", function(data){
					$("#users").text("");
					var str = JSON.stringify(data);
					
					str = str.slice(1, -1);
					var allUsers = str.split("-");
					
					for(var x = 0; x < allUsers.length - 1; x++)
					{
						$("#users").append($("<li>", {
							"text": allUsers[x]
						}));
					}
				});
			});
		}
		else
		{
			$("#users").hide();
			$("#messages-area").hide();
			$("#messages").hide();
			$(".chat-form").hide();
			$("#notLoggedIn").text("you must be logged in to access chat");
		}
		
